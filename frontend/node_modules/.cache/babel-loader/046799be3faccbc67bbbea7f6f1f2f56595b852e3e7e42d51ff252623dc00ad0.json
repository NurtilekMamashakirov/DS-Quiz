{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Автоматически добавляем токен к запросам\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Auth API\nexport const register = (email, password, role = 'user') => api.post('/register', {\n  email,\n  password,\n  role\n});\nexport const login = (email, password) => api.post('/login', {\n  email,\n  password\n});\n\n// Questions API\nexport const getQuestions = () => api.get('/quiz/questions');\nexport const createQuestion = questionData => api.post('/quiz/questions', questionData);\nexport const getRandomQuestions = () => api.get('/quiz/random');\nexport const submitAnswers = answers => api.post('/quiz/submit', answers);\n\n// Leaderboard API\nexport const getLeaderboard = () => api.get('/quiz/leaderboard');\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","register","email","password","role","post","login","getQuestions","get","createQuestion","questionData","getRandomQuestions","submitAnswers","answers","getLeaderboard"],"sources":["/Users/nurtilekm/GolandProjects/DataScience-quiz/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n});\n\n// Автоматически добавляем токен к запросам\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// Auth API\nexport const register = (email, password, role = 'user') =>\n    api.post('/register', { email, password, role });\n\nexport const login = (email, password) =>\n    api.post('/login', { email, password });\n\n// Questions API\nexport const getQuestions = () =>\n    api.get('/quiz/questions');\n\nexport const createQuestion = (questionData) =>\n    api.post('/quiz/questions', questionData);\n\nexport const getRandomQuestions = () =>\n    api.get('/quiz/random');\n\nexport const submitAnswers = (answers) =>\n    api.post('/quiz/submit', answers);\n\n// Leaderboard API\nexport const getLeaderboard = () =>\n    api.get('/quiz/leaderboard');\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH;AACb,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,GAAG,MAAM,KACnDlB,GAAG,CAACmB,IAAI,CAAC,WAAW,EAAE;EAAEH,KAAK;EAAEC,QAAQ;EAAEC;AAAK,CAAC,CAAC;AAEpD,OAAO,MAAME,KAAK,GAAGA,CAACJ,KAAK,EAAEC,QAAQ,KACjCjB,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;EAAEH,KAAK;EAAEC;AAAS,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMI,YAAY,GAAGA,CAAA,KACxBrB,GAAG,CAACsB,GAAG,CAAC,iBAAiB,CAAC;AAE9B,OAAO,MAAMC,cAAc,GAAIC,YAAY,IACvCxB,GAAG,CAACmB,IAAI,CAAC,iBAAiB,EAAEK,YAAY,CAAC;AAE7C,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAC9BzB,GAAG,CAACsB,GAAG,CAAC,cAAc,CAAC;AAE3B,OAAO,MAAMI,aAAa,GAAIC,OAAO,IACjC3B,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAEQ,OAAO,CAAC;;AAErC;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAC1B5B,GAAG,CAACsB,GAAG,CAAC,mBAAmB,CAAC;AAEhC,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}